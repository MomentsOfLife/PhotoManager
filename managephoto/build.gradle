apply plugin: 'java'

sourceCompatibility = 1.7
jar{
    //项目名，也是生成的jar的名字
    baseName = "managePhoto"
    //项目版本号，这部分内容会写进manifest
    version = "1.0"
    //项目的manifest定义，其中就包含最关键的入口类定义
    manifest{
        attributes 'Main-Class': 'com.bihe0832.photo.Main'
    }
    //添加将引用的jar的源码打入最终的jar
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    //排除引用的jar中的签名信息
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
}

//添加源码中引入的非代码文件，例如资源等
sourceSets.main.resources {
    srcDirs = [
            "src/main/java",
    ];
    include "**/*.*"
}

//代码依赖
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

//导出未混淆Jar
task copyJar(dependsOn: "build") {
    copy {
        from 'build/libs/'+ jar.baseName +'-'+ jar.version +'.jar'
        into './../'
        rename { String fileName ->
            fileName.replace(jar.baseName +'-'+ jar.version +'.jar', jar.baseName  +'.jar')
        }
    }
}

task proguardJar(type: proguard.gradle.ProGuardTask,dependsOn: "build") {

    // 未混淆的jar路径
    injars 'build/libs/'+ jar.baseName +'-'+ jar.version +'.jar'
    // 混淆后的jar输出路径
    outjars './../'+ jar.baseName  +'.jar'
    // 混淆协议
    configuration './../proguard-rules.pro'
    
}